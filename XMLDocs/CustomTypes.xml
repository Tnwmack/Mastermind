<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CustomTypes</name>
    </assembly>
    <members>
        <member name="T:Mastermind.BoardRow">
            <summary>
            A simple container for row and score pairs
            </summary>
        </member>
        <member name="F:Mastermind.BoardRow.Row">
            <summary>
            The row colors
            </summary>
        </member>
        <member name="F:Mastermind.BoardRow.Score">
            <summary>
            The row score
            </summary>
        </member>
        <member name="M:Mastermind.BoardRow.#ctor(Mastermind.RowState,Mastermind.RowScore)">
            <summary>
            Creates a new board row
            </summary>
            <param name="Row">The row colors to use</param>
            <param name="Score">The row score to use</param>
        </member>
        <member name="M:Mastermind.BoardRow.op_Equality(Mastermind.BoardRow,Mastermind.BoardRow)">
            <see cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:Mastermind.BoardRow.op_Inequality(Mastermind.BoardRow,Mastermind.BoardRow)">
            <see cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:Mastermind.BoardRow.Equals(System.Object)">
            <see cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:Mastermind.BoardRow.GetHashCode">
            <summary>
            Gets the hash of the row and score
            </summary>
            <returns>The hash code</returns>
        </member>
        <member name="T:Mastermind.IColorMapping">
            <summary>
            An interface for mapping generic color IDs to brushes
            </summary>
        </member>
        <member name="M:Mastermind.IColorMapping.GetBrush(System.Int32)">
            <summary>
            Returns a brush for the given generic ID
            </summary>
            <param name="ColorID">The generic color ID</param>
            <returns>The brush to use for the given color ID</returns>
        </member>
        <member name="T:Mastermind.RowScore">
            <summary>
            Holds row score information
            </summary>
        </member>
        <member name="F:Mastermind.RowScore.NumCorrectSpot">
            <summary>
            The number of pegs in the right spot and color
            </summary>
        </member>
        <member name="F:Mastermind.RowScore.NumCorrectColor">
            <summary>
            The number of pegs the right color but wrong spot
            </summary>
        </member>
        <member name="M:Mastermind.RowScore.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new row score
            </summary>
            <param name="NumCorrectSpot">Number in the correct spot</param>
            <param name="NumCorrectColor">Number of correct colors</param>
        </member>
        <member name="M:Mastermind.RowScore.ToString">
            <summary>
            Gets a text version of the string, num correct over num colors
            </summary>
            <returns>The text version</returns>
        </member>
        <member name="M:Mastermind.RowScore.op_Equality(Mastermind.RowScore,Mastermind.RowScore)">
            <see cref="M:System.Object.Equals(System.Object)"/> 
        </member>
        <member name="M:Mastermind.RowScore.op_Inequality(Mastermind.RowScore,Mastermind.RowScore)">
            <see cref="M:System.Object.Equals(System.Object)"/> 
        </member>
        <member name="M:Mastermind.RowScore.Equals(System.Object)">
            <see cref="M:System.Object.Equals(System.Object)"/> 
        </member>
        <member name="M:Mastermind.RowScore.GetHashCode">
            <summary>
            Gets the hash of the scores
            </summary>
            <returns>The hash code</returns>
        </member>
        <member name="T:Mastermind.RowState">
            <summary>
            Holds a row state.
            This is an immutable class.
            </summary>
        </member>
        <member name="M:Mastermind.RowState.#ctor(System.Byte[])">
            <summary>
            Creates a new row state
            </summary>
            <param name="InitColors">The colors to use for the row</param>
        </member>
        <member name="M:Mastermind.RowState.#ctor(System.Span{System.Byte})">
            <summary>
            Creates a new row state
            </summary>
            <param name="InitColors">The colors to use for the row</param>
        </member>
        <member name="M:Mastermind.RowState.GetRandomColors(System.Random,System.Int32,System.Int32)">
            <summary>
            Generates a random row
            </summary>
            <param name="RandGenerator">The generator to use</param>
            <param name="NumColors">The number of colors to choose between</param>
            <param name="NumColumns">The number of columns to generate</param>
            <returns>The random row</returns>
        </member>
        <member name="M:Mastermind.RowState.CopyTo(System.Byte[])">
            <summary>
            Copies the row colors to a byte array
            </summary>
            <param name="Dest">The destination array</param>
        </member>
        <member name="M:Mastermind.RowState.CopyTo(System.Byte[],System.Int32)">
            <summary>
            Copies the row colors to a byte array
            </summary>
            <param name="Dest">The destination array</param>
            <param name="StartIndex">The index in Dest to start copying to</param>
        </member>
        <member name="M:Mastermind.RowState.ToString">
            <summary>
            Converts this row to a string of numbers
            </summary>
            <returns>The text version of the row</returns>
        </member>
        <member name="P:Mastermind.RowState.Item(System.Int32)">
            <summary>
            Gets the color at the given column number
            </summary>
            <param name="index">The column to get the color</param>
            <returns>The color number</returns>
        </member>
        <member name="P:Mastermind.RowState.Length">
            <summary>
            Gets the number of columns in this row
            </summary>
        </member>
        <member name="M:Mastermind.RowState.op_Equality(Mastermind.RowState,Mastermind.RowState)">
            <see cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:Mastermind.RowState.op_Inequality(Mastermind.RowState,Mastermind.RowState)">
            <see cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:Mastermind.RowState.Equals(System.Object)">
            <see cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:Mastermind.RowState.GetHashCode">
            <summary>
            Gets the hash of the colors
            </summary>
            <returns>The hash code</returns>
        </member>
        <member name="T:Mastermind.TempColors">
            <summary>
            Represents a placeholder color mapping
            </summary>
        </member>
        <member name="M:Mastermind.TempColors.GetBrush(System.Int32)">
            <see cref="M:Mastermind.IColorMapping.GetBrush(System.Int32)"/>
        </member>
    </members>
</doc>
